services:
  app:
    container_name: ${APP_NAME}_app
    restart: unless-stopped
    image: node:latest
    working_dir: /nuxt
    # build:
    #   context: app
    # target: build
    ports:
      - 3000:3000
      # dev port
      - 24678:24678
    volumes:
      - ./app/:/nuxt
    environment:
      # APP
      APP_NAME: ${APP_NAME}
      APP_URL: ${APP_URL}

      # DIRECTUS / API
      API_URL: ${API_URL}
      API_FILE_URL: ${API_FILE_URL}

      # ANALYTICS / POSTHOG
      # POSTHOG_KEY: ${POSTHOG_KEY}
      # POSTHOG_HOST: ${POSTHOG_HOST}

    command: sh -c "npm install && npm run dev -- -o"
    # command: sh -c "npm install && npm run build && node .output/server/index.mjs"
    networks:
      - global-network

  database:
    container_name: ${APP_NAME}_database
    restart: on-failure
    image: postgis/postgis:13-master
    # Required when running on platform other than amd64, like Apple M1/M2:
    # platform: linux/amd64
    volumes:
      - ./data/database:/var/lib/postgresql/data
    networks:
      - directus
    environment:
      POSTGRES_DB: "directus"
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  cache:
    container_name: ${APP_NAME}_cache
    restart: on-failure
    image: redis:6
    networks:
      - directus

  directus:
    container_name: ${APP_NAME}_directus
    restart: unless-stopped
    image: directus/directus:latest
    ports:
      - 8055:8055
    volumes:
      # By default, uploads are stored in /directus/uploads
      # Always make sure your volumes matches the storage root when using
      # local driver
      - ./uploads:/directus/uploads
      # Make sure to also mount the volume when using SQLite
      # - ./database:/directus/database
      # If you want to load extensions from the host
      # - ./extensions:/directus/extensions
    networks:
      - directus
      - global-network
    depends_on:
      - cache
      - database
    environment:
      KEY: "255d861b-5ea1-5996-9aa3-922530ec40b1"
      SECRET: "6116487b-cda1-52c2-b5b5-c8022c45e263"

      DB_CLIENT: "pg"
      DB_HOST: "database"
      DB_PORT: "5432"
      DB_DATABASE: "directus"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      CACHE_ENABLED: "true"
      CACHE_STORE: "redis"
      CACHE_REDIS: "redis://cache:6379"

      ADMIN_EMAIL: ${DIRECTUS_USER_MAIL}
      ADMIN_PASSWORD: ${DIRECTUS_USER_PASSWORD}

      # Make sure to set this in production
      # (see https://docs.directus.io/self-hosted/config-options#general)
      PUBLIC_URL: ${API_URL}

      # CORS
      CORS_ENABLED: "true"
      CORS_ORIGIN: "true"
      CORS_METHODS: "GET,POST,PATCH,DELETE"
      CORS_ALLOWED_HEADERS: "Content-Type,Authorization"
      CORS_EXPOSED_HEADERS: "Content-Range"
      CORS_CREDENTIALS: "true"
      CORS_MAX_AGE: "18000"

      # SMTP
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_TRANSPORT: ${EMAIL_TRANSPORT}

      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}

  # backup
  # duplicati:
  #   image: lscr.io/linuxserver/duplicati:latest
  #   container_name: ${APP_NAME}_duplicati
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Paris
  #   volumes:
  #     - ./config:/config
  #     - ./backups:/backups
  #     - .:/source
  #   ports:
  #     - 8200:8200
  #   restart: unless-stopped

networks:
  directus:
  global:
    external: true
